/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  INameWrapperUpgrade,
  INameWrapperUpgradeInterface,
} from "../../../../../@ensdomains/ens-contracts/contracts/wrapper/INameWrapperUpgrade";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "name",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "wrappedOwner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "fuses",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "expiry",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "extraData",
        type: "bytes",
      },
    ],
    name: "wrapFromUpgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class INameWrapperUpgrade__factory {
  static readonly abi = _abi;
  static createInterface(): INameWrapperUpgradeInterface {
    return new Interface(_abi) as INameWrapperUpgradeInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): INameWrapperUpgrade {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as INameWrapperUpgrade;
  }
}
