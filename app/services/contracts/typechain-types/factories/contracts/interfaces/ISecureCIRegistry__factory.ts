/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISecureCIRegistry,
  ISecureCIRegistryInterface,
} from "../../../contracts/interfaces/ISecureCIRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "authorizer",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "addAddresses",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "authorizerId",
        type: "uint256",
      },
      {
        internalType: "contract Authorizer",
        name: "authorizer",
        type: "address",
      },
    ],
    name: "addAuthorizer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "hasContract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "domainName",
        type: "string",
      },
    ],
    name: "isDomainWhitelisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ISecureCIRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): ISecureCIRegistryInterface {
    return new Interface(_abi) as ISecureCIRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISecureCIRegistry {
    return new Contract(address, _abi, runner) as unknown as ISecureCIRegistry;
  }
}
